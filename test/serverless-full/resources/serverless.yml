service: serverless-openapi-typescript-demo
provider:
  name: aws

plugins:
  - ../node_modules/@conqa/serverless-openapi-documentation
  - ../src/index

custom:
  documentation:
    title: 'Project'
    description: |
      It is a long established fact that a reader will be distracted by the readable content of a
      page when looking at its layout. The point of using Lorem Ipsum is that
      it has a more-or-less normal distribution of letters, as opposed to using
      'Content here, content here', making it look like readable English. Many desktop publishing
      packages and web page editors now use Lorem Ipsum as their default model text, and a search
      for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years,
      sometimes by accident, sometimes on purpose (injected humour and the like).

      More on https://google.com
    apiNamespace: ProjectApi
    webhooks:
      OnCreateWebhook:
        post:
          requestBody:
            description: |
              This is a request body description
          responses:
            200:
              description: |
                This is a expected response description

functions:
  createFunc:
    handler: handler.create
    events:
      - http:
          documentation:
            summary: "Create Function"
            description: |
              Create Function1
              Create Function2
              Create Function3
            queryParams:
              - name: 'param1'
                description: 'Param 1'
                schema: 'ProjectApi.Bool'
              - name: 'param2'
                description: 'Param 2'
                schema: 'ProjectApi.String'
              - name: 'param3'
                description: 'Param 3'
                schema: 'ProjectApi.Number'
          path: create/{funcName}
          method: post
          request:
            parameters:
              paths:
                funcName: true
              querystrings:
                param1: false
                param2: true
                param3: false

  deleteFunc:
    handler: handler.delete
    events:
      - http:
          documentation:
            summary: "Delete Function"
            description: "Delete"
          path: delete/{funcName}
          method: delete
          request:
            parameters:
              paths:
                funcName: true

  updateFunc:
    handler: handler.update
    events:
      - http:
          documentation:
            summary: "Delete Function"
            description: "Delete"
          path: update
          method: put

  getFunc:
    handler: handler.update
    events:
      - http:
          documentation:
            summary: "Get Function"
          path: get/{funcName}
          method: get
          request:
            parameters:
              paths:
                funcName: true

  internalFunc:
    handler: handler.internal
    events:
      - http:
          documentation: ~
          path: internal
          method: get